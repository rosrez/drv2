%% 1.

might_fault() --> called here before dereferencing a userspace pointer

arch/x86/include/asm/uaccess.h

#define get_user(x, ptr)                        \
({                                  \
    int __ret_gu;                           \
    unsigned long __val_gu;                     \
    __chk_user_ptr(ptr);                        \
    might_fault();                          \
    switch (sizeof(*(ptr))) {                   \
    case 1:                             \
        __get_user_x(1, __ret_gu, __val_gu, ptr);       \
        break;                          \
    case 2:                             \
        __get_user_x(2, __ret_gu, __val_gu, ptr);       \
        break;                          \
    case 4:                             \
        __get_user_x(4, __ret_gu, __val_gu, ptr);       \
        break;                          \
    case 8:                             \
        __get_user_8(__ret_gu, __val_gu, ptr);          \
        break;                          \
    default:                            \
        __get_user_x(X, __ret_gu, __val_gu, ptr);       \
        break;                          \
    }                               \
    (x) = (__typeof__(*(ptr)))__val_gu;             \
    __ret_gu;                           \
})


%% 2. Kernel DS: fixed, User DS - fixed. Note this comment:

arch/x86/include/asm/uaccess.h

/*
 * The fs value determines whether argument validity checking should be
 * performed or not.  If get_fs() == USER_DS, checking is performed, with
 * get_fs() == KERNEL_DS, checking is bypassed.
 *
 * For historical reasons, these macros are grossly misnamed.
 */

